import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Skeleton } from '@/components/ui/skeleton';
import { 
  ArrowLeft, 
  FileText, 
  Download, 
  Share, 
  Shield, 
  TrendingUp,
  CheckCircle,
  AlertTriangle,
  MapPin,
  Calendar,
  Zap
} from 'lucide-react';
import { ValuationReport } from '@/services/api/realtybase';
import { useToast } from '@/hooks/use-toast';

export const ValuationReportPage: React.FC = () => {
  const { reportId } = useParams<{ reportId: string }>();
  const navigate = useNavigate();
  const { toast } = useToast();
  
  const [report, setReport] = useState<ValuationReport | null>(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    if (!reportId) {
      navigate('/search');
      return;
    }

    // Mock data for demonstration - in real app, this would fetch from API
    const mockReport: ValuationReport = {
      report_id: reportId,
      property_details: {
        listing_id: "prop-123",
        address: "123 Collins Street",
        suburb: "Melbourne",
        state: "VIC",
        postcode: "3000",
        property_type: "Apartment",
        price: 1200000,
        bedrooms: 2,
        bathrooms: 2,
        car_spaces: 1,
        land_size: 0,
        building_size: 85,
        features: ["Air Conditioning", "Balcony", "Gym", "Pool"],
        photos: [],
        propguard_valuation: {
          ai_valuation: 1350000,
          confidence_score: 0.92,
          valuation_range: { min: 1280000, max: 1420000 }
        },
        propguard_risk: {
          risk_grade: "Low",
          overall_score: 0.25,
          climate_risks: { flood: 0.1, fire: 0.15, coastal: 0.2, geological: 0.05 },
          market_risks: { volatility: 0.3, liquidity: 0.2 }
        },
        propguard_compliance: {
          apra_cps230_compliant: true,
          risk_category: "Standard",
          compliance_score: 0.95,
          nccp_act_compliant: true,
          basel_iii_compliant: true,
          lvr_thresholds: { '80_percent': 1080000, '90_percent': 1215000, '95_percent': 1282500 }
        }
      },
      comprehensive_analysis: {
        ai_valuation: 1350000,
        confidence_level: 0.92,
        methodology: "PropGuard AI uses advanced machine learning algorithms combining market data, property characteristics, and risk factors.",
        comparable_properties: []
      },
      risk_assessment: {
        overall_risk: "Low",
        risk_factors: ["Climate change impacts", "Market volatility"],
        mitigation_strategies: ["Diversified portfolio", "Regular monitoring"]
      },
      market_analysis: {
        location: "Melbourne",
        property_type: "Apartment",
        market_metrics: {
          median_price: 850000,
          price_growth_yoy: 0.125,
          days_on_market: 28,
          auction_clearance_rate: 0.78,
          listing_volume: 450
        },
        ai_insights: {
          market_sentiment: "Strong demand in Melbourne CBD with limited supply driving price growth.",
          investment_outlook: "Positive outlook for premium apartments in prime locations.",
          risk_assessment: "Low to moderate risk given strong fundamentals.",
          recommendations: ["Consider for long-term investment", "Monitor interest rate changes"]
        },
        trend_analysis: {
          price_trend: "rising",
          market_heat: "warm",
          supply_demand_balance: "undersupply"
        }
      },
      compliance_certificate: {
        apra_compliant: true,
        certificate_id: "CERT-2024-001",
        blockchain_hash: "0x1234567890abcdef"
      },
      generated_at: new Date().toISOString()
    };

    // Simulate API delay
    setTimeout(() => {
      setReport(mockReport);
      setIsLoading(false);
    }, 1500);
  }, [reportId, navigate]);

  const formatPrice = (price: number) => {
    if (price >= 1000000) {
      return `$${(price / 1000000).toFixed(1)}M`;
    }
    return `$${price.toLocaleString()}`;
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('en-AU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const handleDownload = () => {
    toast({
      title: "Download Started",
      description: "Your valuation report is being generated for download.",
    });
  };

  const handleShare = () => {
    if (navigator.share) {
      navigator.share({
        title: 'PropGuard AI Valuation Report',
        text: 'Property valuation report generated by PropGuard AI',
        url: window.location.href,
      });
    } else {
      navigator.clipboard.writeText(window.location.href);
      toast({
        title: "Link Copied",
        description: "Report link copied to clipboard.",
      });
    }
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-background py-8">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <Skeleton className="h-10 w-64 mb-8" />
          <div className="space-y-6">
            <Skeleton className="h-48" />
            <Skeleton className="h-32" />
            <Skeleton className="h-64" />
          </div>
        </div>
      </div>
    );
  }

  if (!report) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <Card className="max-w-md mx-auto text-center">
          <CardContent className="p-6">
            <AlertTriangle className="h-12 w-12 text-destructive mx-auto mb-4" />
            <h2 className="text-xl font-semibold mb-2">Report Not Found</h2>
            <p className="text-muted-foreground mb-4">
              The valuation report you're looking for doesn't exist or has been removed.
            </p>
            <Button onClick={() => navigate('/search')}>
              Back to Search
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background py-8">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="flex items-center justify-between mb-8">
          <div className="flex items-center gap-4">
            <Button 
              variant="ghost" 
              size="sm"
              onClick={() => navigate(`/property/${report.property_details.listing_id}`)}
              className="flex items-center gap-2"
            >
              <ArrowLeft className="h-4 w-4" />
              Back to Property
            </Button>
            <div>
              <h1 className="text-2xl font-bold text-foreground">Valuation Report</h1>
              <p className="text-sm text-muted-foreground">
                Generated on {formatDate(report.generated_at)}
              </p>
            </div>
          </div>

          <div className="flex gap-2">
            <Button variant="outline" onClick={handleShare}>
              <Share className="h-4 w-4 mr-2" />
              Share
            </Button>
            <Button onClick={handleDownload}>
              <Download className="h-4 w-4 mr-2" />
              Download PDF
            </Button>
          </div>
        </div>

        {/* Property Summary */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <FileText className="h-5 w-5" />
              Property Summary
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <h3 className="font-semibold text-lg mb-2">{report.property_details.address}</h3>
                <div className="flex items-center gap-2 text-muted-foreground mb-4">
                  <MapPin className="h-4 w-4" />
                  <span>
                    {report.property_details.suburb}, {report.property_details.state} {report.property_details.postcode}
                  </span>
                </div>
                
                <div className="grid grid-cols-2 gap-4 text-sm">
                  <div>
                    <span className="text-muted-foreground">Property Type:</span>
                    <span className="ml-2 font-medium">{report.property_details.property_type}</span>
                  </div>
                  <div>
                    <span className="text-muted-foreground">Bedrooms:</span>
                    <span className="ml-2 font-medium">{report.property_details.bedrooms}</span>
                  </div>
                  <div>
                    <span className="text-muted-foreground">Bathrooms:</span>
                    <span className="ml-2 font-medium">{report.property_details.bathrooms}</span>
                  </div>
                  <div>
                    <span className="text-muted-foreground">Car Spaces:</span>
                    <span className="ml-2 font-medium">{report.property_details.car_spaces}</span>
                  </div>
                </div>
              </div>

              <div className="bg-muted p-6 rounded-lg">
                <div className="flex justify-between items-center mb-4">
                  <div>
                    <p className="text-sm text-muted-foreground">List Price</p>
                    <p className="text-2xl font-bold">{formatPrice(report.property_details.price)}</p>
                  </div>
                  <div className="text-right">
                    <p className="text-sm text-muted-foreground">AI Valuation</p>
                    <p className="text-2xl font-bold text-primary">
                      {formatPrice(report.comprehensive_analysis.ai_valuation)}
                    </p>
                  </div>
                </div>
                <div className="text-center">
                  <Badge variant="outline">
                    {Math.round(report.comprehensive_analysis.confidence_level * 100)}% Confidence
                  </Badge>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Comprehensive Analysis */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <TrendingUp className="h-5 w-5" />
              AI Valuation Analysis
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div>
              <h4 className="font-medium mb-2">Valuation Range</h4>
              <div className="bg-muted p-4 rounded-lg">
                <div className="flex justify-between text-sm mb-2">
                  <span>Conservative: {formatPrice(report.comprehensive_analysis.ai_valuation * 0.95)}</span>
                  <span>Optimistic: {formatPrice(report.comprehensive_analysis.ai_valuation * 1.05)}</span>
                </div>
                <div className="w-full bg-background rounded-full h-3 relative">
                  <div className="bg-primary h-3 rounded-full w-full relative">
                    <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-1 h-5 bg-destructive"></div>
                  </div>
                </div>
                <div className="text-center mt-2 text-sm font-medium">
                  AI Valuation: {formatPrice(report.comprehensive_analysis.ai_valuation)}
                </div>
              </div>
            </div>

            <div>
              <h4 className="font-medium mb-2">Methodology</h4>
              <p className="text-sm text-muted-foreground">
                {report.comprehensive_analysis.methodology}
              </p>
            </div>
          </CardContent>
        </Card>

        {/* Risk Assessment */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Shield className="h-5 w-5" />
              Risk Assessment
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h4 className="font-medium">Overall Risk Grade</h4>
                <p className="text-sm text-muted-foreground">
                  Based on climate, market, and regulatory factors
                </p>
              </div>
              <Badge 
                variant="outline" 
                className={
                  report.risk_assessment.overall_risk === 'Low' ? 'bg-green-100 text-green-800' :
                  report.risk_assessment.overall_risk === 'Medium' ? 'bg-yellow-100 text-yellow-800' :
                  'bg-red-100 text-red-800'
                }
              >
                {report.risk_assessment.overall_risk} Risk
              </Badge>
            </div>

            <div>
              <h4 className="font-medium mb-2">Key Risk Factors</h4>
              <ul className="space-y-2">
                {report.risk_assessment.risk_factors.map((factor, index) => (
                  <li key={index} className="flex items-center gap-2 text-sm">
                    <AlertTriangle className="h-4 w-4 text-yellow-600 flex-shrink-0" />
                    {factor}
                  </li>
                ))}
              </ul>
            </div>

            <div>
              <h4 className="font-medium mb-2">Mitigation Strategies</h4>
              <ul className="space-y-2">
                {report.risk_assessment.mitigation_strategies.map((strategy, index) => (
                  <li key={index} className="flex items-center gap-2 text-sm">
                    <CheckCircle className="h-4 w-4 text-green-600 flex-shrink-0" />
                    {strategy}
                  </li>
                ))}
              </ul>
            </div>
          </CardContent>
        </Card>

        {/* APRA Compliance Certificate */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <CheckCircle className="h-5 w-5" />
              APRA Compliance Certificate
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="flex items-center gap-4 mb-6">
              <div className="flex-shrink-0">
                {report.compliance_certificate.apra_compliant ? (
                  <CheckCircle className="h-12 w-12 text-green-600" />
                ) : (
                  <AlertTriangle className="h-12 w-12 text-yellow-600" />
                )}
              </div>
              <div>
                <h3 className="font-semibold text-lg">
                  {report.compliance_certificate.apra_compliant 
                    ? 'APRA CPS 230 Compliant' 
                    : 'Review Required'}
                </h3>
                <p className="text-sm text-muted-foreground">
                  Certificate ID: {report.compliance_certificate.certificate_id}
                </p>
                {report.compliance_certificate.blockchain_hash && (
                  <p className="text-xs text-muted-foreground">
                    Blockchain Hash: {report.compliance_certificate.blockchain_hash}
                  </p>
                )}
              </div>
            </div>

            {report.property_details.propguard_compliance && (
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="bg-muted p-4 rounded-lg">
                  <h4 className="font-medium text-sm mb-2">LVR Thresholds</h4>
                  <div className="space-y-1 text-xs">
                    <div className="flex justify-between">
                      <span>80% LVR:</span>
                      <span>{formatPrice(report.property_details.propguard_compliance.lvr_thresholds['80_percent'])}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>90% LVR:</span>
                      <span>{formatPrice(report.property_details.propguard_compliance.lvr_thresholds['90_percent'])}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>95% LVR:</span>
                      <span>{formatPrice(report.property_details.propguard_compliance.lvr_thresholds['95_percent'])}</span>
                    </div>
                  </div>
                </div>

                <div className="bg-muted p-4 rounded-lg">
                  <h4 className="font-medium text-sm mb-2">Compliance Score</h4>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-primary">
                      {Math.round(report.property_details.propguard_compliance.compliance_score * 100)}
                    </div>
                    <div className="text-xs text-muted-foreground">out of 100</div>
                  </div>
                </div>

                <div className="bg-muted p-4 rounded-lg">
                  <h4 className="font-medium text-sm mb-2">Risk Category</h4>
                  <div className="text-center">
                    <Badge variant="outline">
                      {report.property_details.propguard_compliance.risk_category}
                    </Badge>
                  </div>
                </div>
              </div>
            )}
          </CardContent>
        </Card>

        {/* Report Footer */}
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-2">
                <Zap className="h-5 w-5 text-primary" />
                <span className="font-medium">PropGuard AI</span>
                <Badge variant="outline">Powered by Australian Property Data</Badge>
              </div>
              <div className="text-right text-sm text-muted-foreground">
                <div className="flex items-center gap-1">
                  <Calendar className="h-4 w-4" />
                  Generated: {formatDate(report.generated_at)}
                </div>
                <div>Report ID: {report.report_id}</div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};