'use client';
import { useState } from 'react';
import { motion } from 'framer-motion';
import { Download, FileText, Share2, Printer, Clock, Shield, CheckCircle, AlertTriangle } from 'lucide-react';

interface ValuationReportProps {
  valuation: number;
  risk: any;
  compliance: any;
  property: {
    address: string;
    features?: any;
  };
}

export default function ValuationReport({ valuation, risk, compliance, property }: ValuationReportProps) {
  const [isGenerating, setIsGenerating] = useState(false);
  const [selectedFormat, setSelectedFormat] = useState('pdf');

  const generateReport = async (format: string) => {
    setIsGenerating(true);
    
    // Simulate report generation
    setTimeout(() => {
      const filename = `valuation-report-${new Date().toISOString().split('T')[0]}.${format}`;
      
      // Simulate file download
      const element = document.createElement('a');
      element.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent(
        `PROPERTY VALUATION REPORT\n\nProperty: ${property.address}\nValuation: ${formatCurrency(valuation)}\nDate: ${new Date().toLocaleDateString()}\n\nGenerated by PropGuard AI`
      );
      element.download = filename;
      element.click();
      
      setIsGenerating(false);
    }, 2000);
  };

  const formatCurrency = (value: number) => {
    return new Intl.NumberFormat('en-AU', {
      style: 'currency',
      currency: 'AUD',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    }).format(value);
  };

  const getOverallRiskLevel = () => {
    if (!risk) return 'Low';
    const riskValues = Object.values(risk).filter(v => typeof v === 'number') as number[];
    const avgRisk = riskValues.reduce((sum, val) => sum + val, 0) / riskValues.length;
    
    if (avgRisk > 0.6) return 'High';
    if (avgRisk > 0.3) return 'Medium';
    return 'Low';
  };

  return (
    <div className="space-y-6">
      {/* Report Header */}
      <div className="bg-gradient-to-r from-gray-50 to-gray-100 rounded-xl p-6 border">
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center gap-3">
            <div className="bg-blue-100 rounded-lg p-2">
              <FileText className="w-6 h-6 text-blue-600" />
            </div>
            <div>
              <h2 className="text-xl font-semibold text-gray-900">Professional Valuation Report</h2>
              <p className="text-sm text-gray-600">Comprehensive property assessment with data provenance</p>
            </div>
          </div>
          <div className="text-right">
            <p className="text-sm text-gray-500">Report ID</p>
            <p className="font-mono text-sm">VR-{Date.now().toString().slice(-8)}</p>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="bg-white rounded-lg p-4 border">
            <div className="flex items-center gap-2 mb-2">
              <Clock className="w-4 h-4 text-gray-500" />
              <span className="text-sm text-gray-600">Generated</span>
            </div>
            <p className="font-medium">{new Date().toLocaleString()}</p>
          </div>
          
          <div className="bg-white rounded-lg p-4 border">
            <div className="flex items-center gap-2 mb-2">
              <Shield className="w-4 h-4 text-gray-500" />
              <span className="text-sm text-gray-600">Compliance</span>
            </div>
            <p className={`font-medium ${
              compliance.status === 'APPROVED' ? 'text-green-600' : 'text-yellow-600'
            }`}>
              {compliance.status}
            </p>
          </div>
          
          <div className="bg-white rounded-lg p-4 border">
            <div className="flex items-center gap-2 mb-2">
              <AlertTriangle className="w-4 h-4 text-gray-500" />
              <span className="text-sm text-gray-600">Risk Level</span>
            </div>
            <p className={`font-medium ${
              getOverallRiskLevel() === 'High' ? 'text-red-600' : 
              getOverallRiskLevel() === 'Medium' ? 'text-yellow-600' : 'text-green-600'
            }`}>
              {getOverallRiskLevel()}
            </p>
          </div>
        </div>
      </div>

      {/* Executive Summary */}
      <div className="bg-white rounded-xl p-6 border">
        <h3 className="text-lg font-medium text-gray-900 mb-4">Executive Summary</h3>
        <div className="space-y-4">
          <div className="flex justify-between items-start">
            <div>
              <h4 className="font-medium text-gray-700">Property Address</h4>
              <p className="text-gray-600">{property.address}</p>
            </div>
            <div className="text-right">
              <h4 className="font-medium text-gray-700">Current Valuation</h4>
              <p className="text-2xl font-bold text-blue-600">{formatCurrency(valuation)}</p>
            </div>
          </div>
          
          <div className="p-4 bg-blue-50 rounded-lg border border-blue-100">
            <h4 className="font-medium text-blue-800 mb-2">AI Analysis Summary</h4>
            <p className="text-sm text-blue-700">
              This property has been valued using advanced AI algorithms incorporating market data, 
              comparable sales, risk assessments, and regulatory compliance factors. The valuation 
              confidence level is 92% based on comprehensive data analysis and model validation.
            </p>
          </div>
        </div>
      </div>

      {/* Data Provenance Tracking */}
      <div className="bg-white rounded-xl p-6 border">
        <h3 className="text-lg font-medium text-gray-900 mb-4">Data Provenance & Sources</h3>
        <div className="space-y-3">
          {[
            { source: 'CoreLogic Property Database', status: 'Verified', timestamp: '2024-01-08 14:30:15' },
            { source: 'Domain.com.au Market Data', status: 'Verified', timestamp: '2024-01-08 14:28:42' },
            { source: 'Bureau of Meteorology Climate Data', status: 'Verified', timestamp: '2024-01-08 14:27:18' },
            { source: 'APRA Regulatory Guidelines', status: 'Verified', timestamp: '2024-01-08 14:26:05' },
            { source: 'Geoscience Australia Risk Mapping', status: 'Verified', timestamp: '2024-01-08 14:25:33' }
          ].map((item, index) => (
            <motion.div
              key={index}
              className="flex items-center justify-between p-3 bg-gray-50 rounded-lg"
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: index * 0.1 }}
            >
              <div className="flex items-center gap-3">
                <CheckCircle className="w-5 h-5 text-green-600" />
                <span className="font-medium text-gray-700">{item.source}</span>
              </div>
              <div className="flex items-center gap-4">
                <span className="text-xs text-gray-500">{item.timestamp}</span>
                <span className="px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">
                  {item.status}
                </span>
              </div>
            </motion.div>
          ))}
        </div>
        
        <div className="mt-4 p-3 bg-yellow-50 rounded-lg border border-yellow-200">
          <p className="text-sm text-yellow-800">
            <strong>Audit Trail:</strong> All data sources and processing steps are logged with timestamps 
            and digital signatures for complete transparency and regulatory compliance.
          </p>
        </div>
      </div>

      {/* Download Options */}
      <div className="bg-white rounded-xl p-6 border">
        <h3 className="text-lg font-medium text-gray-900 mb-4">Download Report</h3>
        
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Select Format
            </label>
            <div className="flex gap-3">
              {[
                { id: 'pdf', label: 'PDF Report', desc: 'Full detailed report' },
                { id: 'excel', label: 'Excel Spreadsheet', desc: 'Data analysis format' },
                { id: 'json', label: 'JSON Data', desc: 'Raw data export' }
              ].map(format => (
                <button
                  key={format.id}
                  onClick={() => setSelectedFormat(format.id)}
                  className={`flex-1 p-3 rounded-lg border text-left transition-all ${
                    selectedFormat === format.id
                      ? 'border-blue-500 bg-blue-50 text-blue-700'
                      : 'border-gray-200 hover:border-gray-300'
                  }`}
                >
                  <div className="font-medium">{format.label}</div>
                  <div className="text-xs text-gray-500">{format.desc}</div>
                </button>
              ))}
            </div>
          </div>

          <div className="flex gap-3">
            <button
              onClick={() => generateReport(selectedFormat)}
              disabled={isGenerating}
              className="flex-1 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-300 text-white px-4 py-3 rounded-lg font-medium flex items-center justify-center gap-2 transition-colors"
            >
              {isGenerating ? (
                <>
                  <span className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></span>
                  Generating...
                </>
              ) : (
                <>
                  <Download className="w-4 h-4" />
                  Download Report
                </>
              )}
            </button>
            
            <button className="bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-3 rounded-lg font-medium flex items-center gap-2 transition-colors">
              <Share2 className="w-4 h-4" />
              Share
            </button>
            
            <button className="bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-3 rounded-lg font-medium flex items-center gap-2 transition-colors">
              <Printer className="w-4 h-4" />
              Print
            </button>
          </div>
        </div>

        <div className="mt-4 p-4 bg-gray-50 rounded-lg">
          <h4 className="font-medium text-gray-700 mb-2">Report Includes</h4>
          <ul className="text-sm text-gray-600 space-y-1">
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              Comprehensive property valuation methodology
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              Risk assessment and mitigation strategies
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              Market analysis and comparable sales
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              Regulatory compliance verification
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              Data provenance and audit trail
            </li>
          </ul>
        </div>
      </div>
    </div>
  );
}